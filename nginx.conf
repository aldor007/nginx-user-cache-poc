user www-data;

events {
    worker_connections 4096;
    multi_accept on;
    accept_mutex on;
    use epoll;
}

http {
    lua_shared_dict prometheus_metrics 10M;
    lua_regex_cache_max_entries 2048;
    lua_package_path "/var/lib/nginx/lua/?.lua;/usr/share/lua/5.1/luarocks/?.lua;/usr/local/share/lua/5.1/?.lua;./lua/?.lua";

    proxy_cache_path /cache/dynamic levels=1:2 keys_zone=dynamic:50m max_size=52m inactive=5d;
    server {
        listen 8000;
        listen 80 default_server;

        # don't send cache-control to browser
        header_filter_by_lua_block {
            if ngx.header['x-browser-cache-control'] ~= nil then 
               ngx.header['cache-control'] = ngx.header['x-browser-cache-control'] 
            end
            ngx.header['x-browser-cache-control'] = nil
        }

        set $no_cache 0;
        set $bypass_cache 0;
        proxy_cache_bypass $bypass_cache;
        proxy_no_cache $no_cache;

        set $cache_key "$host!$uri";
        proxy_cache_key $cache_key;
        proxy_cache dynamic;

        # debug headers
        add_header X-Cache $upstream_cache_status; 
        add_header X-Cache-Key $cache_key;
        add_header X-No-Cache $no_cache;

        rewrite_by_lua_file /var/lib/nginx/lua/rewrite.lua;

        location / {
           proxy_pass http://backend:8080;
        }
    }
}

